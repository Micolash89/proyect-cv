// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                  Int                   @id @default(autoincrement())
  nombre              String
  apellido            String
  telefono            String
  fechaNacimiento     DateTime
  email               String
  ciudad              String
  provincia           String
  linkedin            String?
  estudios            Estudio[]             @relation("UserEstudios")
  experiencias        Experiencia[]         @relation("UserExperiencias")
  cursos              Curso[]               @relation("UserCursos")
  idiomas             Idiomas[]             @relation("UserIdiomas")
  informacionAdiciona InformacionAdiconal[] @relation("UserInformacionAdicional")
}

model Estudio {
  id           Int               @id @default(autoincrement())
  carrera      String //titulo
  estado       EstudioEstadoEnum
  tipo         EstudioTipoEnum //estudios
  institucion  String
  ubicacion    String            @default("")
  fechaIngreso String
  fechaEgreso  String?
  idUsuario    Int
  usuario      User              @relation(fields: [idUsuario], references: [id], name: "UserEstudios")
}

model Experiencia {
  id          Int     @id @default(autoincrement())
  nombre      String //nombre empresa
  puesto      String
  ubicacion   String  @default("")
  fechaInicio String
  fechaFin    String?
  descripcion String
  idUsuario   Int
  usuario     User    @relation(fields: [idUsuario], references: [id], name: "UserExperiencias")
}

model Curso {
  id          Int    @id @default(autoincrement())
  nombre      String //curso
  institucion String
  fechaInicio String
  idUsuario   Int
  usuario     User   @relation(fields: [idUsuario], references: [id], name: "UserCursos")
}

model Idiomas {
  id        Int             @id @default(autoincrement())
  idiomas   String
  nivel     NivelIdiomaEnum
  idUsuario Int
  usuario   User            @relation(fields: [idUsuario], references: [id], name: "UserIdiomas")
}

model InformacionAdiconal {
  id             Int                @id @default(autoincrement())
  licencia       String
  movilidad      String
  incorporacion  String
  disponibilidad DisponibilidadEnum
  idUsuario      Int
  usuario        User               @relation(fields: [idUsuario], references: [id], name: "UserInformacionAdicional")
}

enum EstudioEstadoEnum {
  COMPLETADO
  INCOMPLETO
  PROCESO
}

enum EstudioTipoEnum {
  PRIMARIO
  SECUNDARIO
  TERCEARIO
  UNIVERSITARIO
}

enum NivelIdiomaEnum {
  BASICO
  INTERMEDIO
  AVANZADO
}

enum DisponibilidadEnum {
  FULLTIME
  PARTTIME
}

model Administrador {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}
