generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                   Int                    @id @default(autoincrement())
  nombre               String                 @default("")
  apellido             String                 @default("")
  telefono             String                 @default("")
  fechaNacimiento      DateTime
  email                String                 @default("")
  ciudad               String                 @default("")
  imagenPerfil         String                 @default("")
  provincia            String                 @default("")
  linkedin             String                 @default("")
  dni                  String                 @default("")
  visto                Boolean                @default(false)
  orientacionCV        String                 @default("")
  estudios             Estudio[]              @relation("UserEstudios")
  experiencias         Experiencia[]          @relation("UserExperiencias")
  cursos               Curso[]                @relation("UserCursos")
  idiomas              Idiomas[]              @relation("UserIdiomas")
  informacionAdicional InformacionAdicional[] @relation("UserInformacionAdicional")
  cvTemplate           CVTemplate?            @relation("UserCVTemplate", fields: [cvTemplateId], references: [id])
  cvTemplateId         Int?                   @unique // Clave foránea única
}

model Estudio {
  id           Int               @id @default(autoincrement())
  carrera      String            @default("")
  estado       EstudioEstadoEnum
  tipo         EstudioTipoEnum //estudios
  institucion  String            @default("")
  ubicacion    String            @default("")
  fechaIngreso String            @default("")
  fechaEgreso  String            @default("")
  idUsuario    Int
  usuario      User              @relation(fields: [idUsuario], references: [id], name: "UserEstudios")
}

model Experiencia {
  id          Int    @id @default(autoincrement())
  nombre      String //nombre empresa
  puesto      String @default("")
  ubicacion   String @default("")
  fechaInicio String @default("")
  fechaFin    String @default("")
  descripcion String @default("")
  idUsuario   Int
  usuario     User   @relation(fields: [idUsuario], references: [id], name: "UserExperiencias")
}

model Curso {
  id          Int    @id @default(autoincrement())
  nombre      String @default("")
  institucion String @default("")
  fechaInicio String @default("")
  idUsuario   Int
  usuario     User   @relation(fields: [idUsuario], references: [id], name: "UserCursos")
}

model Idiomas {
  id        Int             @id @default(autoincrement())
  idioma    String          @default("")
  nivel     NivelIdiomaEnum
  idUsuario Int
  usuario   User            @relation(fields: [idUsuario], references: [id], name: "UserIdiomas")
}

model InformacionAdicional {
  id             Int                @id @default(autoincrement())
  licencia       String             @default("")
  movilidad      String             @default("")
  incorporacion  String             @default("")
  office         String             @default("")
  disponibilidad DisponibilidadEnum
  idUsuario      Int
  usuario        User               @relation(fields: [idUsuario], references: [id], name: "UserInformacionAdicional")
}

model CVTemplate {
  id       Int    @id @default(autoincrement())
  template Int
  color    String
  user User? @relation("UserCVTemplate")
}

enum EstudioEstadoEnum {
  COMPLETO
  INCOMPLETO
  PROCESO
}

enum EstudioTipoEnum {
  PRIMARIO
  SECUNDARIO
  TERCIARIO
  UNIVERSIDAD
}

enum NivelIdiomaEnum {
  BASICO
  INTERMEDIO
  AVANZADO
  NATIVO
}

enum DisponibilidadEnum {
  FULLTIME
  PARTTIME
}

model Administrador {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}
